# Trajectory-日志管理工具

![shields_version](/static/shields_version.svg)    ![shields_license](/static/shields_license.svg)    ![shields_author](/static/shields_author.svg)    ![shiedls_python](/static/shields_python.svg)

![fichesymbol](/static/trajectorysymbol.JPG)

## 介绍
+ trajectory是一个日志管理工具，主要功能提供日志统一集中管理功能，主要技术基于logging提供一个mongodb的日志转发器，包括日志过滤、日志格式化功能。


## 安装
trajectory采用Python开发，得益于Python良好的社区环境，安装支持Pythonic风格的各种管理器。
```
	$ pip install trajectory-0.1-xxxxxxxxxxxx.whl
```


## 快速指南

### 服务端使用
+ trajectory提供python-sdk的日志转发器，以下是trajectory主程脚本示例：

```python
from trajectory.handlers import *



### 创建日志操作对象
logger = logging.getLogger()
### 设置日志操作对象的日志等级
logger.setLevel(logging.INFO)
### 创建一个mongodb处理器，指定log_collection
mongohandler = MongoHandler(log_database='trajectory',log_collection='testlog')
### 设置mongodb处理器的日志等级
mongohandler.setLevel(logging.INFO)
### 向日志操作对象添加mongodb处理器
logger.addHandler(mongohandler)
logger.info('this is a info log')
logger.warning('this is a warning log')
```

## 设计
+ 基于python基础包logging开发日志转发处理器
+ 使用mongodb作为日志存储后端
+ 支持日志过滤和日志信息选择

### 技术列表
+ 继承重写
+ 静态方法
+ 对象化
+ JSON
+ 微服务-FastAPI
+ 配置文件-yaml技术
+ 数据库-MongoDB


### 设计UML图
以下是设计的UML图：
![trajectoryuml](/static/TrajectoryUML.png)

